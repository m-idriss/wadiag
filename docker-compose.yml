version: "3"

networks:
  diag-net:
    driver: bridge

services:
  diag-log-postgres:
    image: "postgres:16-alpine"
    restart: always
    container_name: diag-log-postgres
    volumes:
      - diag_log_postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    expose:
      - "5433"
    environment:
      - POSTGRES_DB=diaglog
      - POSTGRES_USER=diaglog
      - POSTGRES_PASSWORD=diaglog
    networks:
      - diag-net
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-h", "localhost", "-U", "diaglog"]
      interval: 10s
      timeout: 5s
      retries: 3

  diag-postgres:
    image: "postgres:16-alpine"
    restart: always
    container_name: diag-postgres
    volumes:
      - diag_postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=diag
      - POSTGRES_USER=diag
      - POSTGRES_PASSWORD=diag
    networks:
      - diag-net
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-h", "localhost", "-U", "diag"]
      interval: 10s
      timeout: 5s
      retries: 3

  diag-log:
    build: ./diag-log
    container_name: diag-log
    restart: always
    environment:
      - PORT=${SPRING_LOG_PORT}
      - DB_SERVER=diag-log-postgres
      - POSTGRES_DB=diaglog
      - POSTGRES_USER=diaglog
      - POSTGRES_PASSWORD=diaglog
    ports:
      - "${SPRING_LOG_PORT}:${SPRING_LOG_PORT}"
    depends_on:
      - diag-log-postgres
    networks:
      - diag-net

  diag-app:
    build: ./diag-app
    container_name: diag-app
    restart: always
    environment:
      - PORT=${SPRING_PORT}
      - DB_SERVER=diag-postgres
      - POSTGRES_DB=diag
      - POSTGRES_USER=diag
      - POSTGRES_PASSWORD=diag
    ports:
      - "${SPRING_PORT}:${SPRING_PORT}"
    depends_on:
      - diag-postgres
    networks:
      - diag-net

  redpanda:
    image: docker.redpanda.com/vectorized/redpanda:v23.3.5
    container_name: diag-redpanda-1
    restart: on-failure:10
    ports:
      - 9092:9092
    command:
      - redpanda start
      - --smp 1
      - --memory 1G
      - --reserve-memory 0M
      - --overprovisioned
      - --node-id 0
      - --check=false
      - --pandaproxy-addr PLAINTEXT://0.0.0.0:28082,OUTSIDE://0.0.0.0:8082
      - --advertise-pandaproxy-addr PLAINTEXT://diag-redpanda-1:28082,OUTSIDE://diag-redpanda-1:8082
      - --kafka-addr PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://diag-redpanda-1:29092,OUTSIDE://diag-redpanda-1:9092
    healthcheck:
      test: ["CMD", "rpk", "cluster", "health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 60s
    networks:
      - diag-net

  kafka-console:
    image: docker.redpanda.com/vectorized/console:latest
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["diag-redpanda-1:29092"]
          schemaRegistry:
            enabled: true
            urls: ["http://diag-redpanda-1:8081"]
    ports:
      - "8086:8080"
    expose:
      - 8086
    depends_on:
      - redpanda
    networks:
      - diag-net

volumes:
  diag_postgres_data:
  diag_log_postgres_data:
